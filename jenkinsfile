pipeline {
    agent none

    tools{
        maven "mymaven"
    }

    parameters{
        string(name: 'Env', defaultValue: 'Test', description: 'environment to deploy')

        // text(name: 'BIOGRAPHY', defaultValue: '', description: 'Enter some information about the person')

        booleanParam(name: 'executeTests', defaultValue: true, description: 'decide to run tc')

        choice(name: 'APPVERSION', choices: ['1.1', '1.2', '1.3'])

       // password(name: 'PASSWORD', defaultValue: 'SECRET', description: 'Enter a password')
    }

    environment {
        BUILD_SERVER='ec2-user@172.31.47.36'
    }

    stages {
        stage('compile') {
            agent any
            steps {
                script {
                    echo "complie the code"
                    echo "Compile in ${params.Env}"
                    sh "mvn compile"
                }
            }
        }
        stage('codereview') {
            agent any
            steps {
                script {
                    echo "codereview done!"
                    sh "mvn pmd:pmd"
                }
            }
        }
        stage('unittest') {
            agent any
            when{
                expression{
                    params.executeTests == true
                }
            }
            steps {
                script {
                    echo "unittest done"
                    sh "mvn test"
                }
            }
            post{
                always{
                    junit 'target/surefire-reports/*.xml'
                }
            }
        }
        stage('codecoverage') {
            agent {label 'ec2-linux-slave1'}
            steps {
                script {
                    echo "codecoverage is there"
                    sh "mvn verify"
                }
            }
        }
        stage('package') {

            agent any  //this is a master

            input{
                message "Select the platform for deployment"
                ok "Platform selected"
                parameters{
                    choice(name: 'Platform',choices:['EKS','EC2','On-prem'])
                }
            }

            steps {
                script {
                    sshagent(['slave2']) //ssh connection to slave2 
                     {
                    echo "packaging the code"
                    echo "platform is ${Platform}"
                    echo "packaging the version ${params.APPVERSION}"
                    //sh "mvn package" //cannot shell command because salve2 is empty
                    sh "scp -o StrictHostKeyChecking=no server-script.sh ${BUILD_SERVER}:/home/ec2-user"// server-script is not there in slave2 so, this command will copy from master as mnetioned agent any 
                    sh "ssh -o StrictHostKeyChecking=no ${BUILD_SERVER} 'bash ~/server-script.sh'" //this shell command is used to connect to slave2 and run shell script
                    
                }
            }
        }
        }
        stage('artifact') {
            steps {
                script {
                    echo "artifact"
                }
            }
        }
    }
}

